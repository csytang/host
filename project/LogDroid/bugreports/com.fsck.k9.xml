<?xml version="1.0" encoding="utf-8"?>
<bugrepository name="k9mail_k-9">
	<bug id="1110">
		<closedTime>Wed Mar 02 21:19:43 CST 2016</closedTime>
		<buginformation>
			<summary>Notification stays after reading e-mail </summary>
			<description>Expected behaviour Notification disappears after reading an e-mail. Actual behaviour The notification stays after reading the e-mail, when the e-mail was received by refreshing the inbox out of the inbox. Steps to reproduce Go to the inbox, where you expect to get an e-mail in. Refresh the inbox, so you receive the e-mail. Click on the new e-mail to read it. (optional) Go back to the inbox by any back button. You see the e-mail is definitely marked unread. Press the home button to leave K-9. Environment K-9 Mail version: 5.008 Android version: 5.1.1 Account type (IMAP, POP3, WebDAV/Exchange): IMAP</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.controller.MessagingController.java</file>
		</fixedFiles>
	</bug>
	<bug id="1139">
		<closedTime>Thu Mar 24 04:28:34 CST 2016</closedTime>
		<buginformation>
			<summary>Error with message count 0 in imap folders </summary>
			<description>Expected behaviour nothing (no error) Actual behaviour 03-03 11:54:12.420 E/k9      (22700): java.lang.Exception: Message count 0 for folder Drafts03-03 11:54:12.420 E/k9      (22700):   at com.fsck.k9.controller.MessagingController.synchronizeMailboxSynchronous(MessagingController.java:931)03-03 11:54:12.420 E/k9      (22700):   at com.fsck.k9.controller.MessagingController.access$300(MessagingController.java:99)03-03 11:54:12.420 E/k9      (22700):   at com.fsck.k9.controller.MessagingController$8.run(MessagingController.java:754)03-03 11:54:12.420 E/k9      (22700):   at com.fsck.k9.controller.MessagingController.run(MessagingController.java:257)03-03 11:54:12.420 E/k9      (22700):   at java.lang.Thread.run(Thread.java:833) Steps to reproduce build and install revision 150fc82 configure imap account start k-9 Environment K-9 Mail version: revision 150fc82 Android version: 6 (Marshmallow) Account type (IMAP, POP3, WebDAV/Exchange): IMAP</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.controller.MessagingController.java</file>
		</fixedFiles>
	</bug>
	<bug id="1150">
		<closedTime>Fri Mar 11 12:25:06 CST 2016</closedTime>
		<buginformation>
			<summary>Can't send message without crypto provider </summary>
			<description>Expected behaviour Message should be sent unsigned. Actual behaviour Without an installed crypto provider sending a message fails with the message "No key configured for signing! Please check your settings." Steps to reproduce Open compose activity Fill in recipient, subject and message text Tap 'send' Environment K-9 Mail version: master / 833e1cc Android version: 5.1</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.activity.compose.ComposeCryptoStatus.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.activity.compose.RecipientPresenter.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.activity.MessageCompose.java</file>
		</fixedFiles>
	</bug>
	<bug id="1151">
		<closedTime>Fri Mar 11 12:25:10 CST 2016</closedTime>
		<buginformation>
			<summary>State of crypto mode selector lost on configuration change </summary>
			<description>Expected behaviour Retain selected state on configuration changes. Actual behaviour Selected state is lost on configuration change. Steps to reproduce Use crypto mode selector to change crypto mode Rotate device Observe crypto mode indicator reverting display to default mode. Environment K-9 Mail version: master / 833e1cc Android version: 5.1</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.activity.compose.ComposeCryptoStatus.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.activity.compose.RecipientPresenter.java</file>
		</fixedFiles>
	</bug>
	<bug id="1164">
		<closedTime>Tue Mar 29 06:01:04 CST 2016</closedTime>
		<buginformation>
			<summary>Local Save Failure </summary>
			<description>Expected behaviour Large messages should always be saved correctly to local storage Actual behaviour Occasionally it appears to fail to create the file. It doesn't appear to be a persistent failure - it did succeed on retry. Maybe we should retry if we get an ENOENT error? com.fsck.k9.mail.MessagingException: Error appending message: at com.fsck.k9.mailstore.LocalFolder.saveMessage(LocalFolder.java:1301)at com.fsck.k9.mailstore.LocalFolder$15.doDbWork(LocalFolder.java:1174)at com.fsck.k9.mailstore.LocalFolder$15.doDbWork(LocalFolder.java:1169)at com.fsck.k9.mailstore.LockableDatabase.execute(LockableDatabase.java:275)at com.fsck.k9.mailstore.LocalFolder.appendMessages(LocalFolder.java:1169)at com.fsck.k9.mailstore.LocalFolder.appendMessages(LocalFolder.java:1096)at com.fsck.k9.controller.MessagingController.downloadLargeMessages(MessagingController.java:1544)at com.fsck.k9.controller.MessagingController.downloadMessages(MessagingController.java:1212)at com.fsck.k9.controller.MessagingController.synchronizeMailboxSynchronous(MessagingController.java:967)at com.fsck.k9.controller.MessagingController.access$300(MessagingController.java:99)at com.fsck.k9.controller.MessagingController$8.run(MessagingController.java:754)at com.fsck.k9.controller.MessagingController.run(MessagingController.java:257)at java.lang.Thread.run(Thread.java:818)Caused by: com.fsck.k9.mail.MessagingException: Unable to open bodyat com.fsck.k9.mail.internet.BinaryTempFileBody.getInputStream(BinaryTempFileBody.java:102)at com.fsck.k9.mail.internet.BinaryTempFileBody.writeTo(BinaryTempFileBody.java:107)at com.fsck.k9.mailstore.LocalFolder.getBodyBytes(LocalFolder.java:1501)at com.fsck.k9.mailstore.LocalFolder.leafPartToContentValues(LocalFolder.java:1426)at com.fsck.k9.mailstore.LocalFolder.updateOrInsertMessagePart(LocalFolder.java:1364)at com.fsck.k9.mailstore.LocalFolder.saveMessagePart(LocalFolder.java:1336)at com.fsck.k9.mailstore.LocalFolder.saveMessageParts(LocalFolder.java:1306)at com.fsck.k9.mailstore.LocalFolder.saveMessage(LocalFolder.java:1244)... 12 moreCaused by: java.io.FileNotFoundException: /data/user/0/com.fsck.k9.debug/cache/body-1246622353.tmp: open failed: ENOENT (No such file or directory)at libcore.io.IoBridge.open(IoBridge.java:452)at java.io.FileInputStream.init(FileInputStream.java:76)at com.fsck.k9.mail.internet.BinaryTempFileBody.getInputStream(BinaryTempFileBody.java:100)... 19 moreCaused by: android.system.ErrnoException: open failed: ENOENT (No such file or directory)at libcore.io.Posix.open(Native Method)at libcore.io.BlockGuardOs.open(BlockGuardOs.java:186)at libcore.io.IoBridge.open(IoBridge.java:438)... 21 more Steps to reproduce Receive a large email Wait for/trigger synchronisation Error reported Environment K9-Mail version: Master (+ adding subject of email to debug output) Device make: Huawei Device model: Nexus 6P Android version: 6.0.1 Account type (IMAP, POP3, WebDAV/Exchange): WebDAV</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.test.java.com.fsck.k9.message.preview.PreviewTextExtractorTest.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.message.preview.PreviewTextExtractor.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.message.preview.PreviewExtractionException.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.message.preview.MessagePreviewCreator.java</file>
		</fixedFiles>
	</bug>
	<bug id="1227">
		<closedTime>Sat Apr 02 20:57:05 CST 2016</closedTime>
		<buginformation>
			<summary>Crash on screen rotate with OpenPGP handled message </summary>
			<description>Expected behaviour Message should be re-rendered in landscape. Actual behaviour Application crashes with following exception. 03-29 08:40:55.041 12045-12045/com.fsck.k9.debug E/AndroidRuntime: FATAL EXCEPTION: main                                                                   Process: com.fsck.k9.debug, PID: 12045                                                                   java.util.NoSuchElementException                                                                       at java.util.ArrayDeque.removeFirst(ArrayDeque.java:248)                                                                       at com.fsck.k9.ui.crypto.MessageCryptoHelper.onCryptoFinished(MessageCryptoHelper.java:454)                                                                       at com.fsck.k9.ui.crypto.MessageCryptoHelper.onCryptoSuccess(MessageCryptoHelper.java:438)                                                                       at com.fsck.k9.ui.crypto.MessageCryptoHelper.handleCryptoOperationSuccess(MessageCryptoHelper.java:420)                                                                       at com.fsck.k9.ui.crypto.MessageCryptoHelper.handleCryptoOperationResult(MessageCryptoHelper.java:379)                                                                       at com.fsck.k9.ui.crypto.MessageCryptoHelper.onCryptoOperationReturned(MessageCryptoHelper.java:353)                                                                       at com.fsck.k9.ui.crypto.MessageCryptoHelper.access$400(MessageCryptoHelper.java:49)                                                                       at com.fsck.k9.ui.crypto.MessageCryptoHelper$4.onReturn(MessageCryptoHelper.java:250)                                                                       at org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask.onPostExecute(OpenPgpApi.java:298)                                                                       at org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask.onPostExecute(OpenPgpApi.java:279)                                                                       at android.os.AsyncTask.finish(AsyncTask.java:651)                                                                       at android.os.AsyncTask.-wrap1(AsyncTask.java)                                                                       at android.os.AsyncTask$InternalHandler.handleMessage(AsyncTask.java:668)                                                                       at android.os.Handler.dispatchMessage(Handler.java:102)                                                                       at android.os.Looper.loop(Looper.java:148)                                                                       at android.app.ActivityThread.main(ActivityThread.java:5422)                                                                       at java.lang.reflect.Method.invoke(Native Method)                                                                       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)                                                                       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616) Email available on request. Steps to reproduce Receive a message that has been signed Open the message. Rotate the phone to landscape Environment K-9 Mail version: commit 74c6e76 (current master) OpenKeychain version: 3.9.4 Android version: 6.0.1 Account type (IMAP, POP3, WebDAV/Exchange): IMAP</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.ui.messageview.MessageViewFragment.java</file>
		</fixedFiles>
	</bug>
	<bug id="1243">
		<closedTime>Wed Oct 12 14:47:25 CST 2016</closedTime>
		<buginformation>
			<summary>FileBackedBody parts are sometimes not saved correctly </summary>
			<description>Expected behaviour Tell us what should happen Content should be displayed Actual behaviour Tell us what happens instead Empty view with warnings about the non encryption status. Clicking on reply shows the plain text part of the mail, so it really is just an ui rendering problem. Steps to reproduce Open a multipart mail in k9 2. 3. Environment K-9 Mail version: latest dev release (5.108) Android version: 6 Account type (IMAP, POP3, WebDAV/Exchange): IMAP I guess this behavior was probably already reported, but I couldn't find am issue. Sorry. Happy to help debugging this if I am the first reporter.</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.mailstore.LocalFolder.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.helper.FileHelper.java</file>
		</fixedFiles>
	</bug>
	<bug id="1250">
		<closedTime>Sat Apr 09 09:20:56 CST 2016</closedTime>
		<buginformation>
			<summary>Reply flag is not set anymore when replying to a mail </summary>
			<description>Expected behaviour Reply flag is set when replying to a mail. Actual behaviour When replying to a mail I do not see a reply flag for the original mail I replied to. When checking the account with a different client (web/Thunderbird) I do not see a flag, too. So it is no frontend bug, the flag is not set anymore, beginning with 5.108. Steps to reproduce See above. Environment K-9 Mail version: 5.108 Android version: CM 12.1 Account type (IMAP, POP3, WebDAV/Exchange): IMAP</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.activity.MessageCompose.java</file>
		</fixedFiles>
	</bug>
	<bug id="1251">
		<closedTime>Sun Jul 24 18:05:23 CST 2016</closedTime>
		<buginformation>
			<summary>App crashed by typing address in the address field when composing a message </summary>
			<description>Expected behaviour Should be possible typing addresses into the address field. Actual behaviour App crashed by typing address in the address field Steps to reproduce Click the compose icon Try to type a address into the "To:" field Environment K-9 Mail version: 5.108 (current alpha) Android version: 5.0 Account type (IMAP, POP3, WebDAV/Exchange): IMAP</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.activity.compose.RecipientMvpView.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.view.RecipientSelectView.java</file>
			<file>k9mail.src.test.java.com.fsck.k9.activity.compose.RecipientPresenterTest.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.activity.compose.RecipientPresenter.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.activity.MessageCompose.java</file>
		</fixedFiles>
	</bug>
	<bug id="1252">
		<closedTime>Thu May 19 12:07:27 CST 2016</closedTime>
		<buginformation>
			<summary>Some e-mails are unreadable after decryption </summary>
			<description>Expected behaviour Mail should be readable Actual behaviour See screenshot Steps to reproduce I don't know when this will happens. Some mails shown correct, some mails like on screenshot. Environment Environment K-9 Mail version: 5.108 (current alpha) Android version: 5.0 Account type (IMAP, POP3, WebDAV/Exchange): IMAP</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.mailstore.DecryptStreamParser.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.crypto.DecryptedTempFileBody.java</file>
            <file>k9mail.src.main.java.com.fsck.k9.mailstore.DecryptedTempFileBody.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.mailstore.LocalMessageExtractor.java</file>
		</fixedFiles>
	</bug>
	<bug id="1271">
		<closedTime>Fri Jul 01 08:30:26 CST 2016</closedTime>
		<buginformation>
			<summary>Crash viewing an application/pgp message </summary>
			<description>Hi Philip, as discussed on the mailing list, here a crash log. To repeat: I have a message with Content-Type: application/pgp; format=text; x-action=encrypt where opening the message consistenly crashes K9, version 5.108 Hope the log helps, let me know if you need any testing. Norbert k9-crash-log.txt</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.crypto.MessageDecryptVerifier.java</file>
			<file>k9mail-library.src.main.java.com.fsck.k9.mail.internet.MessageExtractor.java</file>
		</fixedFiles>
	</bug>
	<bug id="1275">
		<closedTime>Wed Sep 28 21:33:00 CST 2016</closedTime>
		<buginformation>
			<summary>Thread listed multiple times in the message list </summary>
			<description>Sometimes threads are listed more than once in the message list. This is because of a bug in the query to create the threaded message list in EmailProvider. Usually the latest message in a thread is displayed. But when multiple messages have the same timestamp all of them are displayed. Environment K-9 Mail version: 5.108</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.provider.EmailProvider.java</file>
			<file>k9mail.src.androidTest.java.com.fsck.k9.provider.EmailProviderTest.java</file>
		</fixedFiles>
	</bug>
	<bug id="1495">
		<closedTime>Tue Aug 02 16:07:25 CST 2016</closedTime>
		<buginformation>
			<summary>"To" field does not convert typed email addresses to tokens on send </summary>
			<description>Expected behavior Autocomplete address field "To" should convert typed email addresses to tokens when clicking send Actual behavior It does not, shows "Recipient field contains incomplete input!" Steps to reproduce compose mail write body subject and in the last step write email address into "To" field without selecting an email address from the dropdown click send Environment K-9 Mail version: 5.110 Android version: 6 Account type (IMAP, POP3, WebDAV/Exchange): IMAP</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.activity.compose.RecipientMvpView.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.view.RecipientSelectView.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.activity.compose.RecipientPresenter.java</file>
		</fixedFiles>
	</bug>
	<bug id="1582">
		<closedTime>Tue Aug 30 12:53:56 CST 2016</closedTime>
		<buginformation>
			<summary>Crash while moving message </summary>
			<description>Reported via Google Play: java.lang.RuntimeException: Failure delivering result ResultInfo{who=android:fragment:1, request=1, result=-1, data=Intent { (has extras) }} to activity {com.fsck.k9/com.fsck.k9.activity.MessageList}: java.lang.IllegalStateException: got an activity result that wasn't meant for us. this is a bug!    at android.app.ActivityThread.deliverResults(ActivityThread.java:3574)    at android.app.ActivityThread.handleSendResult(ActivityThread.java:3617)    at android.app.ActivityThread.access$1300(ActivityThread.java:151)    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1352)    at android.os.Handler.dispatchMessage(Handler.java:102)    at android.os.Looper.loop(Looper.java:135)    at android.app.ActivityThread.main(ActivityThread.java:5254)    at java.lang.reflect.Method.invoke(Native Method)    at java.lang.reflect.Method.invoke(Method.java:372)    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:904)    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:699)    at de.robv.android.xposed.XposedBridge.main(XposedBridge.java:102)Caused by: java.lang.IllegalStateException: got an activity result that wasn't meant for us. this is a bug!    at com.fsck.k9.ui.messageview.MessageCryptoPresenter.onActivityResult(MessageCryptoPresenter.java:158)    at com.fsck.k9.ui.messageview.MessageViewFragment.onActivityResult(MessageViewFragment.java:405)    at android.app.Activity.dispatchActivityResult(Activity.java:6197)    at android.app.ActivityThread.deliverResults(ActivityThread.java:3570)    ... 11 more User messages: moved a message that was opened to a different folder. Crash on moving opened email to another IMAP folder. Crash after selecting target folder. crash at moving message to different folder. is consistent problem tried to move a message to another folder, crash. happens wavy time I select move and a folder in the refile menu.</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.ui.messageview.MessageViewFragment.java</file>
		</fixedFiles>
	</bug>
	<bug id="1607">
		<closedTime>Tue Sep 13 03:32:01 CST 2016</closedTime>
		<buginformation>
			<summary>Composer crashes when an invalid mail address is about to be shown in recipient selector </summary>
			<description>Steps to reproduce create a contact with a name and an invalid mail address, e. g. "(none)" click '+' to compose new message type first letters of the contact name until it should be shown Logcat 09-09 22:12:26.740 10531 10531 E AndroidRuntime: FATAL EXCEPTION: main09-09 22:12:26.740 10531 10531 E AndroidRuntime: Process: com.fsck.k9, PID: 1053109-09 22:12:26.740 10531 10531 E AndroidRuntime: Theme: themes:{default=overlay:com.brit.swiftdark, fontPkg:com.brit.swiftdark, com.android.systemui=overlay:com.brit.swiftdark, com.android.systemui.navbar=overlay:com.brit.swiftdark}09-09 22:12:26.740 10531 10531 E AndroidRuntime: java.lang.NullPointerException: Attempt to invoke interface method 'int java.lang.CharSequence.length()' on a null object reference09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at android.text.SpannableString.init(SpannableString.java:30)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at android.text.Spannable$Factory.newSpannable(Spannable.java:67)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at com.fsck.k9.activity.compose.RecipientAdapter.highlightText(RecipientAdapter.java:182)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at com.fsck.k9.activity.compose.RecipientAdapter.bindView(RecipientAdapter.java:92)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at com.fsck.k9.activity.compose.RecipientAdapter.getView(RecipientAdapter.java:72)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at android.widget.AbsListView.obtainView(AbsListView.java:2346)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at android.widget.ListPopupWindow$DropDownListView.obtainView(ListPopupWindow.java:1734)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at android.widget.ListView.measureHeightOfChildren(ListView.java:1281)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at android.widget.ListPopupWindow.buildDropDown(ListPopupWindow.java:1209)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at android.widget.ListPopupWindow.show(ListPopupWindow.java:584)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at android.widget.AutoCompleteTextView.showDropDown(AutoCompleteTextView.java:1106)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at com.fsck.k9.view.RecipientSelectView.showDropDown(RecipientSelectView.java:226)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at android.widget.AutoCompleteTextView.updateDropDownForFilter(AutoCompleteTextView.java:975)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at android.widget.AutoCompleteTextView.-wrap2(AutoCompleteTextView.java)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at android.widget.AutoCompleteTextView$PopupDataSetObserver$1.run(AutoCompleteTextView.java:1300)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at android.os.Handler.handleCallback(Handler.java:739)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at android.os.Handler.dispatchMessage(Handler.java:95)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at android.os.Looper.loop(Looper.java:148)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at android.app.ActivityThread.main(ActivityThread.java:5463)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at java.lang.reflect.Method.invoke(Native Method)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)09-09 22:12:26.740 10531 10531 E AndroidRuntime:        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)09-09 22:12:26.741  1716  4127 W ActivityManager:   Force finishing activity com.fsck.k9/.activity.MessageCompose Environment K-9 Mail version: 5.111 (master) Android version: 6.0.1</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.view.RecipientSelectView.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.activity.compose.RecipientLoader.java</file>
		</fixedFiles>
	</bug>
	<bug id="1625">
		<closedTime>Fri Oct 07 04:00:41 CST 2016</closedTime>
		<buginformation>
			<summary>Wrong order for multipart/alternative children </summary>
			<description>We create multipart/alternative parts with a text/html part as first child and text/plain as second child. This isn't what other clients do. And it seems to confuse Thunderbird which then only displays the text/plain part. Affected version: 5.111</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.message.MessageBuilder.java</file>
			<file>k9mail.src.test.java.com.fsck.k9.message.MessageBuilderTest.java</file>
		</fixedFiles>
	</bug>
	<bug id="1629">
		<closedTime>Sat Oct 08 09:01:16 CST 2016</closedTime>
		<buginformation>
			<summary>Attempting to save an attachment causes K-9 to enter a download loop </summary>
			<description>Expected behavior Tell us what should happen Actual behavior A modal for Downloading attachment comes on screen, the background activity darkens, then the dialog closes, the screen goes white, then the dialog reappears, etc: Log trace: 09-23 00:55:51.979 24747-24765/com.fsck.k9.debug I/k9:  Command 'loadAttachment' completed09-23 00:55:52.000 24747-24765/com.fsck.k9.debug I/k9: Running command 'loadAttachment', seq = 109(foregroundpriority)09-23 00:55:52.184 24747-24765/com.fsck.k9.debug I/k9:  Command 'loadAttachment' completed09-23 00:55:52.202 24747-24765/com.fsck.k9.debug I/k9: Running command 'loadAttachment', seq = 110(foregroundpriority)09-23 00:55:53.193 24747-24765/com.fsck.k9.debug I/k9:  Command 'loadAttachment' completed09-23 00:55:53.223 24747-24765/com.fsck.k9.debug I/k9: Running command 'loadAttachment', seq = 111(foregroundpriority)09-23 00:55:55.195 24747-24765/com.fsck.k9.debug I/k9:  Command 'loadAttachment' completed09-23 00:55:55.214 24747-24765/com.fsck.k9.debug I/k9: Running command 'loadAttachment', seq = 112(foregroundpriority)09-23 00:55:55.653 24747-24765/com.fsck.k9.debug I/k9:  Command 'loadAttachment' completed09-23 00:55:55.684 24747-24765/com.fsck.k9.debug I/k9: Running command 'loadAttachment', seq = 113(foregroundpriority)09-23 00:55:56.201 24747-24765/com.fsck.k9.debug I/k9:  Command 'loadAttachment' completed.... Eventually the app crashed with: 09-23 00:58:12.126 24747-24747/? E/AndroidRuntime: FATAL EXCEPTION: main                                                   Process: com.fsck.k9.debug, PID: 24747                                                   java.lang.IllegalStateException: Can not perform this action after onSaveInstanceState                                                       at android.app.FragmentManagerImpl.checkStateLoss(FragmentManager.java:1434)                                                       at android.app.FragmentManagerImpl.enqueueAction(FragmentManager.java:1452)                                                       at android.app.BackStackRecord.commitInternal(BackStackRecord.java:707)                                                       at android.app.BackStackRecord.commit(BackStackRecord.java:671)                                                       at android.app.DialogFragment.dismissInternal(DialogFragment.java:301)                                                       at android.app.DialogFragment.dismiss(DialogFragment.java:267)                                                       at com.fsck.k9.ui.messageview.MessageViewFragment.removeDialog(MessageViewFragment.java:551)                                                       at com.fsck.k9.ui.messageview.MessageViewFragment.access$200(MessageViewFragment.java:55)                                                       at com.fsck.k9.ui.messageview.MessageViewFragment$3.run(MessageViewFragment.java:648) When the application was opened again, the attachment was saved successfully. Steps to reproduce Receive an email with an attachment Try to save it Environment K-9 Mail version: master Android version: 7.0.0 Account type (IMAP, POP3, WebDAV/Exchange): IMAP</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.ui.messageview.AttachmentController.java</file>
		</fixedFiles>
	</bug>
	<bug id="1662">
		<closedTime>Fri Oct 07 22:54:15 CST 2016</closedTime>
		<buginformation>
			<summary>AssertionError: getNewNotificationId() called with no free notification ID </summary>
			<description>Crash reported via Google Play. App version: 5.111 Android versions: 6.0, 5.1 java.lang.AssertionError: getNewNotificationId() called with no free notification ID    at com.fsck.k9.notification.NotificationData.getNewNotificationId(NotificationData.java:77)    at com.fsck.k9.notification.NotificationData.addNotificationContent(NotificationData.java:46)    at com.fsck.k9.notification.NewMailNotifications.addNewMailNotification(NewMailNotifications.java:56)    at com.fsck.k9.notification.NotificationController.addNewMailNotification(NotificationController.java:105)    at com.fsck.k9.controller.MessagingController$12.messageFinished(MessagingController.java:1435)    at com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder.fetch(Pop3Store.java:836)    at com.fsck.k9.controller.MessagingController.downloadSmallMessages(MessagingController.java:1393)    at com.fsck.k9.controller.MessagingController.downloadMessages(MessagingController.java:1196)    at com.fsck.k9.controller.MessagingController.synchronizeMailboxSynchronous(MessagingController.java:953)    at com.fsck.k9.controller.MessagingController$9.run(MessagingController.java:739)    at com.fsck.k9.controller.MessagingController.runInBackground(MessagingController.java:204)    at com.fsck.k9.controller.MessagingController.access$000(MessagingController.java:115)    at com.fsck.k9.controller.MessagingController$1.run(MessagingController.java:173)    at java.lang.Thread.run(Thread.java:818) java.lang.AssertionError: getNewNotificationId() called with no free notification ID    at com.fsck.k9.notification.NotificationData.getNewNotificationId(NotificationData.java:77)    at com.fsck.k9.notification.NotificationData.addNotificationContent(NotificationData.java:46)    at com.fsck.k9.notification.NewMailNotifications.addNewMailNotification(NewMailNotifications.java:56)    at com.fsck.k9.notification.NotificationController.addNewMailNotification(NotificationController.java:105)    at com.fsck.k9.controller.MessagingController$12.messageFinished(MessagingController.java:1435)    at com.fsck.k9.mail.store.imap.ImapFolder.fetch(ImapFolder.java:770)    at com.fsck.k9.controller.MessagingController.downloadSmallMessages(MessagingController.java:1393)    at com.fsck.k9.controller.MessagingController.downloadMessages(MessagingController.java:1196)    at com.fsck.k9.controller.MessagingController.access$3200(MessagingController.java:115)    at com.fsck.k9.controller.MessagingController$40.run(MessagingController.java:4440)    at com.fsck.k9.controller.MessagingController.runInBackground(MessagingController.java:204)    at com.fsck.k9.controller.MessagingController.access$000(MessagingController.java:115)    at com.fsck.k9.controller.MessagingController$1.run(MessagingController.java:173)    at java.lang.Thread.run(Thread.java:818) java.lang.AssertionError: getNewNotificationId() called with no free notification ID    at com.fsck.k9.notification.NotificationData.getNewNotificationId(NotificationData.java:77)    at com.fsck.k9.notification.NotificationData.addNotificationContent(NotificationData.java:46)    at com.fsck.k9.notification.NewMailNotifications.addNewMailNotification(NewMailNotifications.java:56)    at com.fsck.k9.notification.NotificationController.addNewMailNotification(NotificationController.java:105)    at com.fsck.k9.controller.MessagingController.downloadLargeMessages(MessagingController.java:1571)    at com.fsck.k9.controller.MessagingController.downloadMessages(MessagingController.java:1203)    at com.fsck.k9.controller.MessagingController.synchronizeMailboxSynchronous(MessagingController.java:953)    at com.fsck.k9.controller.MessagingController$9.run(MessagingController.java:739)    at com.fsck.k9.controller.MessagingController.runInBackground(MessagingController.java:204)    at com.fsck.k9.controller.MessagingController.access$000(MessagingController.java:115)    at com.fsck.k9.controller.MessagingController$1.run(MessagingController.java:173)    at java.lang.Thread.run(Thread.java:818)</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.test.java.com.fsck.k9.notification.NotificationDataTest.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.notification.NotificationData.java</file>
		</fixedFiles>
	</bug>
	<bug id="1666">
		<closedTime>Fri Oct 07 23:18:16 CST 2016</closedTime>
		<buginformation>
			<summary>Switching from dark to light theme (or vise versa) inside message doesn't work </summary>
			<description>Expected behavior When fixed message theme option is disabled, switching the theme when viewing a message should switch the theme immediately. Actual behavior After switching the theme inside the message, the message view reloads but the theme stays the same. I need to leave the message and open it again to get the other theme. Steps to reproduce Disable fixed message theme option Open message and switch to dark / light theme Environment K-9 Mail version: v5.111 + v5.112 (iirc, before v5.111 I didn't have this problem) Android version: 6.0.1 Account type : IMAP</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.activity.MessageLoaderHelper.java</file>
		</fixedFiles>
	</bug>
	<bug id="1685">
		<closedTime>Wed Oct 12 14:24:55 CST 2016</closedTime>
		<buginformation>
			<summary>"Fetching headers null:null 3/3" </summary>
			<description>Obviously it shouldn't be null. Also it seems to be stuck like that.</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.activity.ActivityListener.java</file>
		</fixedFiles>
	</bug>
	<bug id="1874">
		<closedTime>Fri Dec 30 19:28:36 CST 2016</closedTime>
		<buginformation>
			<summary>Crash: NPE in Address.hashCode() </summary>
			<description>Via Play Developer Console App version: 5.200 java.lang.NullPointerException: Attempt to invoke virtual method 'int java.lang.String.hashCode()' on a null object referenceat com.fsck.k9.mail.Address.hashCode(Address.java:176)at java.util.Collections.secondaryHash(Collections.java:3405)at java.util.LinkedHashMap.get(LinkedHashMap.java:250)at android.support.v4.util.LruCache.get(LruCache.java:84)at com.fsck.k9.activity.misc.ContactPictureLoader.getBitmapFromCache(ContactPictureLoader.java:213)at com.fsck.k9.activity.misc.ContactPictureLoader.loadContactPicture(ContactPictureLoader.java:133)at com.fsck.k9.activity.compose.RecipientAdapter.setContactPhotoOrPlaceholder(RecipientAdapter.java:137)at com.fsck.k9.view.RecipientSelectView.bindObjectView(RecipientSelectView.java:128)at com.fsck.k9.view.RecipientSelectView.getViewForObject(RecipientSelectView.java:112)at com.fsck.k9.view.RecipientSelectView.buildSpanForObject(RecipientSelectView.java:437)at com.fsck.k9.view.RecipientSelectView.buildSpanForObject(RecipientSelectView.java:47)at com.tokenautocomplete.TokenCompleteTextView.insertSpan(TokenCompleteTextView.java:1031)at com.tokenautocomplete.TokenCompleteTextView.access$700(TokenCompleteTextView.java:54)at com.tokenautocomplete.TokenCompleteTextView$3.run(TokenCompleteTextView.java:924)at android.os.Handler.handleCallback(Handler.java:739)at android.os.Handler.dispatchMessage(Handler.java:95)at android.os.Looper.loop(Looper.java:135)at android.app.ActivityThread.main(ActivityThread.java:5930)at java.lang.reflect.Method.invoke(Native Method)at java.lang.reflect.Method.invoke(Method.java:372)at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1405)at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1200)</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail-library.src.main.java.com.fsck.k9.mail.Address.java</file>
			<file>k9mail-library.src.test.java.com.fsck.k9.mail.AddressTest.java</file>
		</fixedFiles>
	</bug>
	<bug id="1879">
		<closedTime>Fri Dec 30 20:21:53 CST 2016</closedTime>
		<buginformation>
			<summary>Crash: OOM during migration </summary>
			<description>Via Play Developer Console App version: 5.200 java.lang.OutOfMemoryError: Failed to allocate a 2060 byte allocation with 1974 free bytes and 1974B until OOMat org.apache.james.mime4j.stream.MimeEntity.advanceToBoundary(MimeEntity.java:387)at org.apache.james.mime4j.stream.MimeEntity.advance(MimeEntity.java:331)at org.apache.james.mime4j.stream.MimeTokenStream.next(MimeTokenStream.java:360)at org.apache.james.mime4j.parser.MimeStreamParser.parse(MimeStreamParser.java:176)at com.fsck.k9.mail.message.MessageHeaderParser.parse(MessageHeaderParser.java:24)at com.fsck.k9.mailstore.LocalMessage.populateFromGetMessageCursor(LocalMessage.java:127)at com.fsck.k9.mailstore.LocalStore$13.doDbWork(LocalStore.java:638)at com.fsck.k9.mailstore.LocalStore$13.doDbWork(LocalStore.java:615)at com.fsck.k9.mailstore.LockableDatabase.execute(LockableDatabase.java:275)at com.fsck.k9.mailstore.LocalStore.getMessages(LocalStore.java:615)at com.fsck.k9.mailstore.LocalFolder$10.doDbWork(LocalFolder.java:880)at com.fsck.k9.mailstore.LocalFolder$10.doDbWork(LocalFolder.java:875)at com.fsck.k9.mailstore.LockableDatabase.execute(LockableDatabase.java:275)at com.fsck.k9.mailstore.LocalFolder.getMessages(LocalFolder.java:875)at com.fsck.k9.mailstore.migrations.MigrationTo55.createFtsSearchTable(MigrationTo55.java:36)at com.fsck.k9.mailstore.migrations.Migrations.upgradeDatabase(Migrations.java:66)at com.fsck.k9.mailstore.StoreSchemaDefinition.upgradeDatabase(StoreSchemaDefinition.java:60)at com.fsck.k9.mailstore.StoreSchemaDefinition.doDbUpgrade(StoreSchemaDefinition.java:36)at com.fsck.k9.mailstore.LockableDatabase.openOrCreateDataspace(LockableDatabase.java:381)at com.fsck.k9.mailstore.LockableDatabase.open(LockableDatabase.java:354)at com.fsck.k9.mailstore.LocalStore.init(LocalStore.java:210)at com.fsck.k9.mailstore.LocalStore.getInstance(LocalStore.java:235)at com.fsck.k9.Account.getLocalStore(Account.java:1278)at com.fsck.k9.controller.MessagingController.setupPushing(MessagingController.java:4322)at com.fsck.k9.service.MailService.setupPushers(MailService.java:349)at com.fsck.k9.service.MailService.reschedulePushers(MailService.java:338)at com.fsck.k9.service.MailService.access$100(MailService.java:24)at com.fsck.k9.service.MailService$1.run(MailService.java:194)at com.fsck.k9.service.CoreService$1.run(CoreService.java:315)at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)at java.lang.Thread.run(Thread.java:818)</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.mailstore.LocalFolder.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.mailstore.migrations.MigrationTo55.java</file>
		</fixedFiles>
	</bug>
	<bug id="1899">
		<closedTime>Thu Jan 19 17:10:20 CST 2017</closedTime>
		<buginformation>
			<summary>Crash: NPE in LocalStore.getRawAttachmentInputStream() </summary>
			<description>Via Play Developer Console Version: 5.200 or 5.201 java.lang.NullPointerException: Attempt to get length of null arrayat java.io.ByteArrayInputStream.init(ByteArrayInputStream.java:60)at com.fsck.k9.mailstore.LocalStore.getRawAttachmentInputStream(LocalStore.java:873)at com.fsck.k9.mailstore.LocalStore.writeSimplePartToOutputStream(LocalStore.java:857)at com.fsck.k9.mailstore.LocalStore.writeCursorPartsToOutputStream(LocalStore.java:746)at com.fsck.k9.mailstore.LocalStore.access$300(LocalStore.java:78)at com.fsck.k9.mailstore.LocalStore$16.doDbWork(LocalStore.java:722)at com.fsck.k9.mailstore.LocalStore$16.doDbWork(LocalStore.java:714)at com.fsck.k9.mailstore.LockableDatabase.execute(LockableDatabase.java:275)at com.fsck.k9.mailstore.LocalStore.writeAttachmentDataToOutputStream(LocalStore.java:714)at com.fsck.k9.mailstore.LocalStore.access$100(LocalStore.java:78)at com.fsck.k9.mailstore.LocalStore$15.writeTo(LocalStore.java:706)at org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSourceTransferThread.run(ParcelFileDescriptorUtil.java:118)</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.mailstore.LocalFolder.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.mailstore.migrations.MigrationTo57.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.mailstore.migrations.Migrations.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.mailstore.LocalStore.java</file>
		</fixedFiles>
	</bug>
	<bug id="1908">
		<closedTime>Tue Jan 10 11:11:14 CST 2017</closedTime>
		<buginformation>
			<summary>Cannot zoom HTML messages properly if at all </summary>
			<description>Expected behavior HTML mail should pinch zoom as it always has Actual behavior In 5.201 I tried zooming a few HTML emails. Nether would pinch zoom (though double tapping made them a tiny bit bigger). At least once this led to a crash of the app. I reverted to 5.010 and zoom works just fine with the same mail - in fact, it never had any such issue so I'm not upgrading until this is fixed. Steps to reproduce Open html email e.g. from Xbox.com Pinch zoom Either nothing happens, it moves a tiny bit, or it ends up crashing. Environment K-9 Mail version: 5.201 is broken for this. Works fine in 5.010 Android version: 7.0 on Nexus 6 IMAP</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.view.NonLockingScrollView.java</file>
		</fixedFiles>
	</bug>
	<bug id="1914">
		<closedTime>Wed Jan 04 06:42:35 CST 2017</closedTime>
		<buginformation>
			<summary>Crypto indicator displayed in token dropdown when no crypto provider configured </summary>
			<description>See this screenshot provided by someone on the mailing list. The three dots were mistaken for a broken menu indicator.</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.activity.AlternateRecipientAdapter.java</file>
		</fixedFiles>
	</bug>
	<bug id="1919">
		<closedTime>Tue Jan 03 16:49:46 CST 2017</closedTime>
		<buginformation>
			<summary>ImapResponseParser.parseLiteral timeout error </summary>
			<description>k9-log.txt Expected behavior Tell us what should happen K9 should be able to read IMAP mail Actual behavior Tell us what happens instead It logs in the IMAP account but doesn't read the mail box. Steps to reproduce Environment K-9 Mail version: 5.201 Android version: 6.0.1 Account type (IMAP, POP3, WebDAV/Exchange): IMAP</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail-library.src.test.java.com.fsck.k9.mail.store.imap.ImapResponseParserTest.java</file>
			<file>k9mail-library.src.main.java.com.fsck.k9.mail.store.imap.ImapResponseParser.java</file>
			<file>k9mail-library.src.main.java.com.fsck.k9.mail.filter.FixedLengthInputStream.java</file>
			<file>k9mail-library.src.main.java.com.fsck.k9.mail.store.imap.ImapResponseParserException.java</file>
		</fixedFiles>
	</bug>
	<bug id="1930">
		<closedTime>Sun Jan 08 02:17:15 CST 2017</closedTime>
		<buginformation>
			<summary>Black text in quotation in replies </summary>
			<description>Expected behavior When replying to a mail the quoted part should be shown in white, also when the black design is used. Actual behavior Steps to reproduce Additionally you may need to use a black design in Cyanogenmod. The pre-5.0 version the quote was shown correctly. Environment K-9 Mail version: 5.20 Android version: CM 13</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.view.MessageWebView.java</file>
		</fixedFiles>
	</bug>
	<bug id="1950">
		<closedTime>Sun Jan 15 21:44:30 CST 2017</closedTime>
		<buginformation>
			<summary>Contact auto selecting first item </summary>
			<description>If there are "FirstUser@example.com" and "SecondUser@example.com" in my Contacts and i type "User@example.com" then app selects first entry from contacts and i cannot send email to "User@example.com". Previous versions allowed me type address and select one from suggestions if i want. Work around is to end the address with a comma and a space so new address object is created. K-9 Mail version: 5.201</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.view.RecipientSelectView.java</file>
		</fixedFiles>
	</bug>
	<bug id="616">
		<closedTime>Mon Jul 06 19:08:06 CST 2015</closedTime>
		<buginformation>
			<summary>Account setting "Delete from Server" lost after SSLError </summary>
			<description>Hi, ever and anon I get an SSLCertificate error with my provider gmx.net. When this happens the account settings changes and mails will be no longer deleted from the mail server after they are deleted localy. I have to change the settings by hand back. regards dieter</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.activity.setup.AccountSetupIncoming.java</file>
		</fixedFiles>
	</bug>
	<bug id="618">
		<closedTime>Tue Apr 28 03:57:09 CST 2015</closedTime>
		<buginformation>
			<summary>Resource leak -- file not closed -- found by Facebook's static analyzer </summary>
			<description>Hello, This resource leak report, included with comments below, were found by running Facebook's Infer static analyzer on K-9. Regards, Dulma Rodriguez Facebook Static Analysis Tools Team File: k9mail/src/androidTest/java/com/fsck/k9/helper/HtmlConverterTest.java Report: Resource Leak: resource acquired by call to FileWriter(...) at line 143 is not released after line 147. Remarks: The problem seems to be that out.write(...) can throw an exception, in which case out.close() won't get called. A simple fix is to put the call to close in a finally clause.</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.androidTest.java.com.fsck.k9.helper.HtmlConverterTest.java</file>
		</fixedFiles>
	</bug>
	<bug id="690">
		<closedTime>Mon Sep 07 05:02:15 CST 2015</closedTime>
		<buginformation>
			<summary>Runtime exception when loading an email in the background. </summary>
			<description>Steps to reproduce: Open an email that contains more data than the threshold to load. Click "Download complete message" and immediately back out of the message. When the message finishes downloading, the following exception occurs: com.fsck.k9.debug E/AndroidRuntime锕� FATAL EXCEPTION: main    Process: com.fsck.k9.debug, PID: 22305    java.lang.IllegalStateException: Fragment MessageViewFragment{41c41ab0} not attached to Activity            at android.app.Fragment.getLoaderManager(Fragment.java:1019)            at com.fsck.k9.ui.messageview.MessageViewFragment.onMessageDownloadFinished(MessageViewFragment.java:247)            at com.fsck.k9.ui.messageview.MessageViewFragment.access$1400(MessageViewFragment.java:56)            at com.fsck.k9.ui.messageview.MessageViewFragment$DownloadMessageListener$1.run(MessageViewFragment.java:808)            at android.os.Handler.handleCallback(Handler.java:733)            at android.os.Handler.dispatchMessage(Handler.java:95)            at android.os.Looper.loop(Looper.java:136)            at android.app.ActivityThread.main(ActivityThread.java:5146)            at java.lang.reflect.Method.invokeNative(Native Method)            at java.lang.reflect.Method.invoke(Method.java:515)            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:732)            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:566)            at dalvik.system.NativeStart.main(Native Method)</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.ui.messageview.MessageViewFragment.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.controller.MessagingController.java</file>
		</fixedFiles>
	</bug>
	<bug id="732">
		<closedTime>Thu Jul 07 19:03:57 CST 2016</closedTime>
		<buginformation>
			<summary>My k9 does not verify Sign after download </summary>
			<description>If I compile K9 and install on my phone, select the OpenKeyChain provider, and my key and then receive a Signed Mail, K9 says me that the mail is signed but he does not have the key, so i presso "lookup", it searchs the key, download It (via OpenKeyChain) and when it turn back to K9, my mail is not "signed" yet, but if i exit the mail view fragment and re-open the mail, now it see the key on OpenKeyChain and verify the Sign, just like if It returns after download It does not refresh the fragment view. How can I fix that? please help, I'm going crazy .</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.ui.messageview.MessageTopView.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.ui.messageview.MessageViewFragment.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.ui.messageview.MessageCryptoPresenter.java</file>
		</fixedFiles>
	</bug>
	<bug id="744">
		<closedTime>Sun Sep 13 01:03:17 CST 2015</closedTime>
		<buginformation>
			<summary>WhatsApp sharing problem (8-bit encoding) </summary>
			<description>Using K9 from PlayStore, v5.006, Samsung Galaxy S5. Open a WhatsApp chat where you received an image. Push for a long time on image to select it, choose to share with K9. K9 will compose and send the message, but the image attachment is unreadable for the recipient. The problem does not appear when you single tap on a WhatsApp image to zoom it, and then share from here. Analyzing the received email: K9 is encoding the attachment with Content-Transfer-Encoding: 8bit, but I think the 8bit body is not correct, because it contains \r\n in the wrong position, not permitted by MIME RFC 2045 https://tools.ietf.org/html/rfc2045#section-2.8 I think K9 should encode attachments in the usual base64 way. Also posted here Google Code</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.activity.loader.AttachmentInfoLoader.java</file>
		</fixedFiles>
	</bug>
	<bug id="765">
		<closedTime>Sun Sep 13 00:39:55 CST 2015</closedTime>
		<buginformation>
			<summary>Export folder-settings only works for top level folders </summary>
			<description>I have a folder structure with 3 or 4 levels of (sub-)folders in my IMAP account. After configuring all the folders (display class, sync class, push class, ...) I exported the settings and imported them on my new phone, but only the settings for the top level folders where transferred. I checked the k9s file and saw that only the top level folders where exported. I edited the file and added all my folders (with a script) and imported that file after clearing the K9 data. This time, all settings were imported. So the export skips sub-folders but the import (fortunately) does not. Sub-folders should also be exported. I tested this with v5.006 and v5.107 on Nexus 5 with stock Android 5.1.1.</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.preferences.SettingsExporter.java</file>
			<file>src.com.fsck.k9.preferences.SettingsExporter.java</file>
		</fixedFiles>
	</bug>
	<bug id="786">
		<closedTime>Sun Oct 11 09:47:35 CST 2015</closedTime>
		<buginformation>
			<summary>K9 don麓t show folder that begin with brackets </summary>
			<description>Imap folders that begin (or end) with brackets don麓t appear on k9. example: [games] [aviation] [soccer]</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail-library.src.main.java.com.fsck.k9.mail.store.imap.ImapList.java</file>
			<file>k9mail-library.src.main.java.com.fsck.k9.mail.store.imap.ImapResponse.java</file>
		</fixedFiles>
	</bug>
	<bug id="811">
		<closedTime>Thu Mar 03 00:48:15 CST 2016</closedTime>
		<buginformation>
			<summary>ClassCastException on IMAP sync </summary>
			<description>On a fresh install of k9Mail on a new phone, one of my IMAP accounts stops suddenly with the below error. It worked like a charm for a few days prior to that. I've another IMAP account on the same server which still works and isn't affected. K9-Mail version: 5.006 Device make: motorola Device model: MotoG3 Android version: 5.1.1 java.lang.ClassCastException: com.fsck.k9.mail.store.ImapResponseParser$ImapList cannot be cast to java.lang.String at com.fsck.k9.mail.store.ImapResponseParser.readTokens(ImapResponseParser.java:69) at com.fsck.k9.mail.store.ImapResponseParser.readResponse(ImapResponseParser.java:51) at com.fsck.k9.mail.store.ImapResponseParser.readResponse(ImapResponseParser.java:29) at com.fsck.k9.mail.store.ImapStore$ImapConnection.readStatusResponse(ImapStore.java:2775) at com.fsck.k9.mail.store.ImapStore$ImapConnection.saslAuthPlain(ImapStore.java:2727) at com.fsck.k9.mail.store.ImapStore$ImapConnection.open(ImapStore.java:2530) at com.fsck.k9.mail.store.ImapStore$ImapConnection.sendCommand(ImapStore.java:2872) at com.fsck.k9.mail.store.ImapStore$ImapConnection.executeSimpleCommand(ImapStore.java:2921) at com.fsck.k9.mail.store.ImapStore$ImapConnection.executeSimpleCommand(ImapStore.java:2902) at com.fsck.k9.mail.store.ImapStore$ImapFolder.executeSimpleCommand(ImapStore.java:858) at com.fsck.k9.mail.store.ImapStore$ImapFolder.internalOpen(ImapStore.java:904) at com.fsck.k9.mail.store.ImapStore$ImapFolder.open(ImapStore.java:867) at com.fsck.k9.controller.MessagingController.synchronizeMailboxSynchronous(MessagingController.java:1041) at com.fsck.k9.controller.MessagingController.access$400(MessagingController.java:111) at com.fsck.k9.controller.MessagingController$8.run(MessagingController.java:934) at com.fsck.k9.controller.MessagingController.run(MessagingController.java:435) at java.lang.Thread.run(Thread.java:818)</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail-library.src.test.java.com.fsck.k9.mail.store.imap.ImapResponseParserTest.java</file>
			<file>k9mail-library.src.main.java.com.fsck.k9.mail.store.imap.ImapResponseParser.java</file>
		</fixedFiles>
	</bug>
	<bug id="818">
		<closedTime>Sun Sep 27 06:15:50 CST 2015</closedTime>
		<buginformation>
			<summary>Viewing/saving inline images doesn't work </summary>
			<description>Long-pressing inline images displays a popup with items "View image" and "Save image". Both currently don't work. Since we no longer rewrite cid:-URIs to content://-URIs pointing to our content provider for attachments we need to change the code that handles viewing and saving inline images. See MessageContainerView.onCreateContextMenu()</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.ui.messageview.MessageContainerView.java</file>
		</fixedFiles>
	</bug>
	<bug id="864">
		<closedTime>Wed Jan 13 07:32:46 CST 2016</closedTime>
		<buginformation>
			<summary>Loop when decrypting PGP/MIME mail </summary>
			<description>Using the current master branch I'm trying to decrypt PGP/MIME mails using OpenKeychain. When I open the message, K9 correctly starts OpenKeychain which lets me enter my PIN and then asks me to hold my YubiKey NEO to the NFC scanner. After the decryption is done, I remove the key and OpenKeychain gives control back to K9 which in turn opens OpenKeychain again. This repeats forever. When I click "Cancel", it stops the loop but also crashes K9 (probably issue ##588).</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.ui.crypto.MessageCryptoHelper.java</file>
		</fixedFiles>
	</bug>
	<bug id="899">
		<closedTime>Tue Jan 12 01:38:58 CST 2016</closedTime>
		<buginformation>
			<summary>backslash in username does not work for IMAP login </summary>
			<description>I need to access an exchange server via IMAP. My username has the form username@domain\special_mailbox . Authentication with just username for the personal mailbox works fine but not for the special mailbox with the backslash syntax above. I tried two backslashes since I suspected some java string escaping problem, but that did not work either.</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail-library.src.main.java.com.fsck.k9.mail.store.imap.ImapConnection.java</file>
		</fixedFiles>
	</bug>
	<bug id="926">
		<closedTime>Sat Dec 12 04:57:54 CST 2015</closedTime>
		<buginformation>
			<summary>checking hide password checkbock makes carret move </summary>
			<description>When creating a new account. 1- Enter a few characters in the password field. Let's call these characters "part 1". 2- Check the show password checkbox. 3- Enter a few characters. Let's call these characters "part 2" => the latest characters (part 2) are entered before the earliest (part 1) Example : part 1 = abc part 2 = xyz What is shown in the password field : 1- *** 2- abc 3- xyzabc We should see abcxyz</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.main.java.com.fsck.k9.activity.setup.AccountSetupBasics.java</file>
		</fixedFiles>
	</bug>
	<bug id="969">
		<closedTime>Thu Jan 07 00:55:41 CST 2016</closedTime>
		<buginformation>
			<summary>Make UidReverseComparator transitive </summary>
			<description>After loading a new mail message from pop3 server all messages dissapeared and in the inbox was visible just the message IllegalArgumentException. All messages were lost. I reinstalled K9, downloaded messages from pop3 server again, but two days later the same error arose and messages were lost again. I encountered this bug a year ago for the first time but now it's here again.</description>
		</buginformation>
		<fixedFiles>
			<file>k9mail.src.test.java.com.fsck.k9.controller.UidReverseComparatorTest.java</file>
			<file>k9mail.src.main.java.com.fsck.k9.controller.MessagingController.java</file>
		</fixedFiles>
	</bug>
</bugrepository>
